---
import CenterApp from "../components/CenterApp.astro";
import RandParag from "../components/RandParag.astro";
import Tooltip from "../components/Tooltip.astro";

import { post } from "../ts/fetchHelper";

const code = Astro.url.searchParams.get("code");

const accessData = !code ? null : await post("https://discord.com/api/oauth2/token", {headers: {"Content-Type": "application/x-www-form-urlencoded"}, body: new URLSearchParams({
	client_id: import.meta.env.APP_ID,
	client_secret: import.meta.env.APP_SECRET,
	grant_type: "authorization_code",
	redirect_uri: import.meta.env.AUTH_CALLBACK,
	code,
})});

---

<CenterApp noheader>
	<p class="text-3xl"><Tooltip text="Authenticating using Discord..">Authenticating</Tooltip></p>
	<center><p id="inf" data-accessdata={JSON.stringify(accessData)} class="bg-dark duration-500 rounded-md px-2 border border-dashed"><RandParag /></p></center>

	<script type="module">
		let elm = document.querySelector("p#inf");
		if(!elm) {
			elm = document.createElement("p");
			document.body.append(elm);
		}
		const accessData = JSON.parse(elm.dataset.accessdata || "null");
		if(!accessData) {
			elm.classList.add("text-danger", "border-danger");
			throw new Error("Callback code was not provided");
		}

		if(accessData.error || accessData.message) {
			elm.innerHTML = "Unable to get access";
			elm.classList.add("text-danger", "border-danger");
			throw new Error(`Something went wrong, literally 1984. ${JSON.stringify(accessData.error || accessData.message)}`);
		}
		elm.innerHTML = `Access scopes: ${JSON.stringify(accessData.scope)}`;
		elm.classList.add("border-glint");

		const user = await (await fetch("https://discord.com/api/users/@me", {method: "GET", headers: {"authorization": `${accessData.token_type} ${accessData.access_token}`}})).json();
		elm.innerHTML = `Authenticated successfully. Hello <em>${user.username}</em>`;
		elm.classList.replace("border-glint", "border-fg");

	</script>
</CenterApp>
